{"version":3,"file":"static/js/515.85ddf6a4.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactsList/ContactsList.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/SortedBtns/SortedBtns.styled.jsx","components/SortedBtns/SortedBtns.jsx","redux/contacts/selectors.js","hooks/useContact.js","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Section = styled.section`\ndisplay-flex: flex;\njustify-content:center;\n  align-items:center;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\nexport const ContactsWrapper = styled.div`\n  width: 400px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  padding: 25px;\n  margin-top: 12px;\n  background-color: white;\n`;\n\nexport const Message = styled.p`\n  font-size: 30px;\n  font-weight: 400;\n  margin:0;\n  text-align:center;\n`;\n","import styled from '@emotion/styled';\n\nexport const LoaderStyled = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  margin-top: 15px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 5px groove #0099FF;\n  padding: 10px 0;\n`;\n\nexport const Btn = styled.button`\n    width: 100%;\n  height: 32px;\n  margin-left: 5px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: ${proprs => (proprs.delete ? 'red' : '#0099FF')};\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #54515193;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 5px;\n`;","import styled from '@emotion/styled';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(0 0 0 / 10%);\n  z-index: 100;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: block;\n  height: 30px;\n  width: 30px;\n  right: 10px;\n  z-index: 1;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n\n`;\n\nexport const Icon = styled(AiOutlineCloseCircle)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: color 200ms linear;\n  \n  :hover {\n\tcolor: #0fc1dd;\n  }\n\n`;\n\nexport const Form = styled.form`\nposition: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  background-color: white;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #0fc1dd;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operation';\nimport {\n  BtnClose,\n  ModalWindow,\n  Overlay,\n  Form,\n  Input,\n  AddButton,\n  Icon,\n} from './Modal.styled';\n\nconst Modal = ({ contactInfo, toggleOpen }) => {\n  const { name, number, id } = contactInfo;\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value, id };\n\t  dispatch(editContact(contact));\n\t  toggleOpen();\n  };\n\n  return (\n    <Overlay>\n      <ModalWindow>\n        <Form onSubmit={handleSubmit}>\n          <BtnClose onClick={toggleOpen}>\n            <Icon size=\"30\" />\n          </BtnClose>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n            defaultValue={name}\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Number\"\n            defaultValue={number}\n          />\n          <AddButton type=\"submit\">\n            <span>Edit contacts</span>\n          </AddButton>\n        </Form>\n      </ModalWindow>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const SortBtn = styled.button`\n  min-width: 180px;\n  height: 30px;\n  margin: ;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  position: relative;\n  background: #0099FF;\n  border: none;\n  z-index: 1;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 3px 4px 20px 0px, rgba(0, 0, 0, 0.1) 1px 5px 4px 0px;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n      rgba(0, 0, 0, 0.1) 3px 4px 20px 0px, rgba(0, 0, 0, 0.1) 1px 5px 4px 0px;\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { sortByName } from 'redux/contacts/contactSlice';\nimport { SortBtn, BtnWrapper } from './SortedBtns.styled';\n\n\nconst SortedBtns = () => {\n\tconst dispatch = useDispatch();\n  return (\n    <BtnWrapper>\n      <SortBtn onClick={() => dispatch(sortByName())}>\n        Sort by name\n      </SortBtn>     \n    </BtnWrapper>\n  );\n};\n\nexport default SortedBtns;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectSortedAlphabetic = state => state.contacts.sortedAlphabetic;\n\nexport const selectRecentlyAdded = state => state.contacts.recentlyAdded;\n\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n\t(contacts, filterValue) => {\n    const filtredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n    return filtredContacts;\n  }\n);\n\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectRecentlyAdded,\n  selectSortedAlphabetic,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const sortedAlphabetic = useSelector(selectSortedAlphabetic);\n  const recentlyAdded = useSelector(selectRecentlyAdded);\n\n  return {\n    contacts,\n    visibleContacts,\n    error,\n    isLoading,\n    sortedAlphabetic,\n    recentlyAdded,\n  };\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport {\n  List,\n  ListItem,\n  Btn,\n  BtnWrapper,\n  LoaderStyled,\n} from './ContactsList.styled';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport Modal from '../Modal/Modal';\nimport SortedBtns from '../SortedBtns/SortedBtns';\nimport Loader from '../Loader/Loader';\nimport { useContacts } from 'hooks/useContact';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { visibleContacts } = useContacts();\n  const { isLoading } = useContacts();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [targetContact, setTargetContact] = useState({});\n\n  const toggleOpen = () => setIsModalOpen(!isModalOpen);\n\n  const handleClick = e => {\n    const id = e.currentTarget.parentNode.parentNode.dataset.id;\n    const targetContact = visibleContacts.find(contact => contact.id === id);\n    setTargetContact(targetContact);\n    toggleOpen();\n  };\n\n  const handleDelete = id => {\n    Confirm.show(\n      'Deleting contact',\n      'Do you wanst delete this contact?',\n      'Yes',\n      'No',\n      () => {\n        dispatch(deleteContact(id));\n      }\n    );\n  };\n\n  return (\n    <>\n      <SortedBtns />\n      {isLoading ? (\n        <LoaderStyled>\n          {' '}\n          <Loader color={'#0fc1dd'} size={'50'} />\n        </LoaderStyled>\n      ) : (\n        <List>\n          {visibleContacts.map(({ name, number, id }) => {\n            return (\n              <ListItem data-id={id} key={id}>\n                {name}: {number}\n                <BtnWrapper>\n                  <Btn type=\"button\" onClick={handleClick}>\n                    Edit\n                  </Btn>\n                  <Btn delete type=\"button\" onClick={() => handleDelete(id)}>\n                    Delete\n                  </Btn>\n                </BtnWrapper>\n                {isModalOpen && (\n                  <Modal toggleOpen={toggleOpen} contactInfo={targetContact} />\n                )}\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 25px;\n  padding-bottom: 25px;\n  border-radius: 5px;\n  margin-bottom: 35px;\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  background-color: white;\n`;\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 0;\n  margin-bottom: 10px;\n`;\n\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 5px;\n\n  border: 0;\n  border-bottom: 2px solid gray;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60%;\n  padding: 8px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: rgb(255, 255, 255);\n  border-radius: 5px;\n  font-family: Lato, sans-serif;\n  font-weight: 500;\n  font-size: 16px;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(255, 255, 255, 0.5) 2px 2px 2px 0px inset,\n    rgba(0, 0, 0, 0.1) 7px 7px 20px 0px, rgba(0, 0, 0, 0.1) 4px 4px 5px 0px;\n  outline: none;\n  position: relative;\n  background: #0099FF;\n  border: none;\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background-color: #2ba2cd;\n    border-radius: 5px;\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n    transition: all 0.3s ease;\n  }\n  &:hover {\n    color: #fff;\n  }\n\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  > span {\n    margin-right: 10px;\n    font-size: 18px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Input, AddButton, Form, Title } from './ContactForm.styled';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/contacts/operation';\nimport { useContacts } from 'hooks/useContact';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const contact = { name: name.value, number: number.value };\n    if (contacts.find(existingContact => existingContact.name === name.value)) {\n      Notiflix.Notify.failure(`${contact.name} is already in your contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          required\n          placeholder=\"Name\"\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Number\"\n        />\n        <AddButton type=\"submit\">\n          <span>Add contacts </span>\n        </AddButton>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 10px;\n  text-align: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  min-width: 400px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding: 15px 25px;\n\n  border: 0;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  background-color: white;\n\n  box-shadow: 1px 7px 14px 0px rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterInput, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Name\"\n        onChange={handleChange}\n      ></FilterInput>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Title, Message, ContactsWrapper, Section } from './Contacts.styled';\nimport { useDispatch} from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { useContacts } from 'hooks/useContact';\n\nconst Contacts = () => {\n\tconst dispatch = useDispatch();\n\tconst { contacts } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Section>\n      <div>\n        <ContactForm />\n        <Filter />\n      </div>\n      <div>\n        <Title>Contacts</Title>\n        <ContactsWrapper>\n          {contacts.length > 0 ? (\n            <ContactsList />\n          ) : (\n            <Message>Phonebook is empty. Add new record.</Message>\n          )}\n        </ContactsWrapper>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["Section","styled","Title","ContactsWrapper","Message","LoaderStyled","List","ListItem","Btn","proprs","delete","BtnWrapper","Overlay","ModalWindow","BtnClose","Icon","AiOutlineCloseCircle","Form","Input","AddButton","contactInfo","toggleOpen","name","number","id","dispatch","useDispatch","onSubmit","e","preventDefault","target","contact","value","editContact","onClick","size","type","pattern","title","required","placeholder","defaultValue","SortBtn","sortByName","selectContacts","state","contacts","selectError","error","selectIsLoading","isLoading","selectSortedAlphabetic","sortedAlphabetic","selectRecentlyAdded","recentlyAdded","selectVisibleContacts","createSelector","filter","filterValue","toLowerCase","includes","useContacts","useSelector","visibleContacts","useState","isModalOpen","setIsModalOpen","targetContact","setTargetContact","handleClick","currentTarget","parentNode","dataset","find","Loader","color","map","Confirm","deleteContact","handleDelete","existingContact","Notiflix","addContact","reset","Label","FilterInput","onChange","setFilter","useEffect","fetchContacts","length","ContactsList"],"sourceRoot":""}